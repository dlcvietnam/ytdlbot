#!/usr/local/bin/python3
# coding: utf-8

# ytdlbot - constant.py
# 8/16/21 16:59
#

__author__ = "Benny <benny.think@gmail.com>"

import os

from config import (
    AFD_LINK,
    COFFEE_LINK,
    ENABLE_CELERY,
    FREE_DOWNLOAD,
    REQUIRED_MEMBERSHIP,
    TOKEN_PRICE,
)
from database import InfluxDB
from utils import get_func_queue


class BotText:
    start = """
    Taobao Media Version 3.0.0
    Mi·ªÖn ph√≠: 10 l∆∞·ª£t t·∫£i/ng√†y.
    Mua th√™m: 20k = 20 l∆∞·ª£t t·∫£i, h·ªó tr·ª£ t·∫£i th√™m ·∫£nh v√† video trong m√¥ t·∫£ s·∫£n ph·∫©m khi t√†i kho·∫£n c√≥ l∆∞·ª£t t·∫£i tr·∫£ ph√≠

    G√µ /help ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt"""

    help = """
**G·ª≠i ƒë√∫ng ƒë·ªãnh d·∫°ng link ƒë·ªÉ √≠t g·∫∑p l·ªói kh√¥ng ƒë√°ng c√≥!** üîó
**(Link d·∫°ng `item.taobao.com`, `tmall.com`, `tb.cn`...)**
**1. ƒê·ªëi v·ªõi th√†nh vi√™n mi·ªÖn ph√≠:** üÜì
  * C·∫ßn t·∫£i l√™n **Cookies Taobao c√° nh√¢n** üç™ ƒë·ªÉ c√≥ th·ªÉ s·ª≠ d·ª•ng. C√°ch l·∫•y nh∆∞ sau:
      * D√πng tr√¨nh duy·ªát Chrome/Edge c√†i ƒë·∫∑t extension **Cookie-Editor**:
        üëâ [https://chromewebstore.google.com/detail/cookie-editor/hlkenndednhfkekhgcdicdfddnkalmdm](https://chromewebstore.google.com/detail/cookie-editor/hlkenndednhfkekhgcdicdfddnkalmdm)
      * ƒêƒÉng nh·∫≠p v√†o trang web **Taobao.com** üîë, sau ƒë√≥ b·∫•m bi·ªÉu t∆∞·ª£ng **Cookie-Editor** üç™ v√† ch·ªçn **Export > JSON**.
      * M·ªü **Notepad** üìù d√°n n·ªôi dung JSON ƒë√£ ƒë∆∞·ª£c copy v√† l∆∞u v√†o file `b·∫•t_k√¨.txt`.
      * G·ª≠i file cho bot **Taobao Media** ü§ñ ƒë·ªÉ c·∫≠p nh·∫≠t cookies c√° nh√¢n. üéâ
**2. ƒê·ªëi v·ªõi th√†nh vi√™n tr·∫£ ph√≠ v√† c√≤n s·ªë l∆∞·ª£t t·∫£i tr·∫£ ph√≠:** üí∞
  * **Kh√¥ng c·∫ßn l√†m c≈©ng ƒë∆∞·ª£c**. üòé
**L∆∞u √Ω quan tr·ªçng:** ‚ùó
  * V√¨ Taobao b·∫Øt x√°c minh t√†i kho·∫£n li√™n t·ª•c üîê, n√™n m√¨nh kh√¥ng c√≥ ƒë·ªß t√†i kho·∫£n ƒë·ªÉ duy tr√¨ d·ªãch v·ª•. Mong c√°c b·∫°n th√¥ng c·∫£m. üôè
  * N·∫øu kh√¥ng bi·∫øt l√†m, c√≥ th·ªÉ li√™n h·ªá **@cpanel10x** üôã‚Äç‚ôÇÔ∏è ƒë·ªÉ ƒë∆∞·ª£c m√¨nh h·ªó tr·ª£, **y√™u c·∫ßu ph·∫£i c√≥ m√°y t√≠nh** üíª.
  * G√µ /buy ƒë·ªÉ mua l∆∞·ª£t t·∫£i VIP v·ªõi gi√° **20k = 20 l∆∞·ª£t t·∫£i** üôã‚Äç‚ôÇÔ∏è.
    """

    about = "Taobao Media Bot Ver 3.0.2 by @cpanel10x. \n\nPh√°t tri·ªÉn t·ª´ YouTube Downloader by @BennyThink.\n\nOpen source on GitHub: https://github.com/tgbot-collection/ytdlbot"

    buy = f"""
**L∆∞u √Ω:**
1. B·∫°n c√≥ {FREE_DOWNLOAD} l∆∞·ª£t t·∫£i mi·ªÖn ph√≠ m·ªói ng√†y n·∫øu c√≥ **Upload Cookies** theo h∆∞·ªõng d·∫´n /help.

2. L∆∞·ª£t t·∫£i mua s·∫Ω c√≥ h·∫°n s·ª≠ d·ª•ng 30 ng√†y.

3. Kh√¥ng h·ªó tr·ª£ ho√†n ti·ªÅn.

**Gi√° mua:** 20.000 VNƒê == {TOKEN_PRICE} tokens

**Ph∆∞∆°ng th·ª©c thanh to√°n:** Qu√©t m√£ QR t·ª± ƒë·ªông
B·∫•m Qu√©t M√£ QR b√™n d∆∞·ªõi ƒë·ªÉ nh·∫≠n m√£.`
    """

    private = "This bot is for private use"

    membership_require = f"You need to join this group or channel to use this bot\n\nhttps://t.me/{REQUIRED_MEMBERSHIP}"

    settings = """
Please choose the preferred format and video quality for your video. These settings only **apply to YouTube videos**.

High quality is recommended. Medium quality aims to 720P, while low quality is 480P.

If you choose to send the video as a document, it will not be possible to stream it.

Your current settings:
Video quality: **{0}**
Sending format: **{1}**
"""
    custom_text = os.getenv("CUSTOM_TEXT", "")

    premium_warning = """
    Your file is too big, do you want me to try to send it as premium user? 
    This is an experimental feature so you can only use it once per day.
    Also, the premium user will know who you are and what you are downloading. 
    You may be banned if you abuse this feature.
    """

    @staticmethod
    def get_receive_link_text() -> str:
        reserved = get_func_queue("reserved")
        if ENABLE_CELERY and reserved:
            text = f"Your tasks was added to the reserved queue {reserved}. Processing...\n\n"
        else:
            text = "Your task was added to active queue.\nProcessing...\n\n"

        return text

    @staticmethod
    def ping_worker() -> str:
        from tasks import app as celery_app

        workers = InfluxDB().extract_dashboard_data()
        # [{'celery@Benny„ÅÆMBP': 'abc'}, {'celery@Benny„ÅÆMBP': 'abc'}]
        response = celery_app.control.broadcast("ping_revision", reply=True)
        revision = {}
        for item in response:
            revision.update(item)

        text = ""
        for worker in workers:
            fields = worker["fields"]
            hostname = worker["tags"]["hostname"]
            status = {True: "‚úÖ"}.get(fields["status"], "‚ùå")
            active = fields["active"]
            load = "{},{},{}".format(fields["load1"], fields["load5"], fields["load15"])
            rev = revision.get(hostname, "")
            text += f"{status}{hostname} **{active}** {load} {rev}\n"

        return text
