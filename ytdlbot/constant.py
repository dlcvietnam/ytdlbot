#!/usr/local/bin/python3
# coding: utf-8

# ytdlbot - constant.py
# 8/16/21 16:59
#

__author__ = "Benny <benny.think@gmail.com>"

import os

from config import (
    AFD_LINK,
    COFFEE_LINK,
    ENABLE_CELERY,
    FREE_DOWNLOAD,
    REQUIRED_MEMBERSHIP,
    TOKEN_PRICE,
)
from database import InfluxDB
from utils import get_func_queue


class BotText:
    start = """
üïπ Taobao Media - Version: 2.0.0 üïπ
C√¥ng c·ª• h·ªó tr·ª£ t·∫£i ·∫£nh/video t·ª´ nhi·ªÅu ngu·ªìn
\n
***S√†n TMƒêT:***
```
üá®üá≥ Taobao.com
üá®üá≥ 1688.com
üá∫üá∏ Ebay.com
üá∫üá∏ Amazon.com (Store & Video Review)
```
***V√† c√°c trang chia s·∫ª video/m·∫°ng x√£ h·ªôi:***
```
Tiktok.com
Facebook.com
Yotube.com
Pornhub.com...
```
V√† nhi·ªÅu trang kh√°c.\n
[Xem to√†n b·ªô](https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md)
\nG√µ /help ƒë·ªÉ xem th√™m chi ti·∫øt!
"""

    help = f"""
1. N·∫øu g·∫∑p b·∫•t k·ª≥ l·ªói g√¨ khi t·∫£i, vui l√≤ng nh·∫Øn tin v√†o nh√≥m h·ªó tr·ª£ ƒë·ªÉ ƒë∆∞·ª£c h∆∞·ªõng d·∫´n.
2. M·ªói th√†nh vi√™n s·∫Ω c√≥ {FREE_DOWNLOAD} l∆∞·ª£t t·∫£i mi·ªÖn ph√≠ v√† ƒë∆∞·ª£c reset m·ªói 24h.
3. M·ªôt s·ªë video khi t·∫£i v·ªÅ c√≥ ƒë·ªãnh d·∫°ng MKV ho·∫∑c Webm s·∫Ω kh√¥ng th·ªÉ xem tr·ª±c ti·∫øp ƒë∆∞·ª£c, h·ªá th·ªëng s·ª≠ t·ª± ƒë·ªông chuy·ªÉn ƒë·ªïi sang ƒë·ªãnh d·∫°ng MP4 ƒë·ªÉ c√≥ th·ªÉ xem tr·ª±c ti·∫øp tr√™n ƒëi·ªán tho·∫°i. Th√†nh vi√™n mi·ªÖn ph√≠ ch·ªâ c√≥ th·ªÉ chuy·ªÉn ƒë·ªïi video c√≥ th·ªùi l∆∞·ª£ng nh·ªè h∆°n **5 ph√∫t**.
4. B·∫°n c√≥ th·ªÉ mua th√™m l∆∞·ª£t t·∫£i.
"""

    about = "Ph√°t tri·ªÉn d·ª±a tr√™n YouTube Downloader by @BennyThink.\n\nLi√™n h·ªá @cpanel10x n·∫øu c√≥ nhu c√¢u"

    buy = f"""
**ƒêi·ªÅu l·ªá:**
1. M·ªói th√†nh vi√™n s·∫Ω c√≥ {FREE_DOWNLOAD} l∆∞·ª£t t·∫£i mi·ªÖn ph√≠ v√† ƒë∆∞·ª£c reset m·ªói 24h.

2. Mua th√™m l∆∞·ª£t t·∫£i trong ng√†y qua @cpanel10x.

3. Kh√¥ng ho√†n ti·ªÅn d∆∞·ªõi m·ªçi h√¨nh th·ª©c.

4. ƒê·ªëi v·ªõi c√°c l∆∞·ª£t t·∫£i tr·∫£ ph√≠ s·∫Ω kh√¥ng b·ªã x·∫øp v√†o h√†ng ƒë·ª£i v√† s·∫Ω nhanh h∆°n r·∫•t nhi·ªÅu.

5. Th√†nh vi√™n mua vip c√≥ th·ªÉ t·∫£i file l·ªõn h∆°n 2GB.

**Gi√° b√°n:**
C√≥ hi·ªáu l·ª±c ngay l·∫≠p t·ª©c
1. 1 USD == {TOKEN_PRICE} tokens
2. 20K VND == {TOKEN_PRICE} tokens
3. 10 TRX == {TOKEN_PRICE} tokens

**Payment options:**
Pay any amount you want. For example you can send 20 TRX for {TOKEN_PRICE * 2} tokens.
1. AFDIAN(AliPay, WeChat Pay and PayPal): {AFD_LINK}
2. Buy me a coffee: {COFFEE_LINK}
3. Telegram Bot Payment(Stripe), please click Bot Payment button.
4. TRON(TRX), please click TRON(TRX) button.

**After payment:**
1. Afdian: attach order number with /redeem command (e.g., `/redeem 123456`).
2. Buy Me a Coffee: attach email with /redeem command (e.g., `/redeem 123@x.com`). **Use different email each time.**
3. Telegram Payment & Tron(TRX): automatically activated within 60s. Check /start to see your balance.

Want to buy more token with Telegram payment? Let's say 100? Here you go! `/buy 123`
    """

    private = "This bot is for private use"

    membership_require = f"B·∫°n c·∫ßn b·∫•m ƒëƒÉng k√≠ theo d√µi k√™nh th√¥ng b√°o Taobao Tools ƒë·ªÉ c√≥ th·ªÉ s·ª≠ d·ª•ng bot\n\nhttps://t.me/{REQUIRED_MEMBERSHIP}"

    settings = """
Please choose the preferred format and video quality for your video. These settings only **apply to YouTube videos**.

High quality is recommended. Medium quality aims to 720P, while low quality is 480P.

If you choose to send the video as a document, it will not be possible to stream it.

Your current settings:
Video quality: **{0}**
Sending format: **{1}**
"""
    custom_text = os.getenv("CUSTOM_TEXT", "")

    premium_warning = """
    Your file is too big, do you want me to try to send it as premium user? 
    This is an experimental feature so you can only use it once per day.
    Also, the premium user will know who you are and what you are downloading. 
    You may be banned if you abuse this feature.
    """

    @staticmethod
    def get_receive_link_text() -> str:
        reserved = get_func_queue("reserved")
        if ENABLE_CELERY and reserved:
            text = f"Your tasks was added to the reserved queue {reserved}. Processing...\n\n"
        else:
            text = "ƒêang ph√¢n t√≠ch li√™n k·∫øt, vui l√≤ng ch·ªù...\nN·∫øu th·ªùi gian ch·ªù qu√° l√¢u (H∆°n 3 ph√∫t), vui l√≤ng g·ª≠i l·∫°i m·ªôt l·∫ßn n·ªØa...\n\n"

        return text

    @staticmethod
    def ping_worker() -> str:
        from tasks import app as celery_app

        workers = InfluxDB().extract_dashboard_data()
        # [{'celery@Benny„ÅÆMBP': 'abc'}, {'celery@Benny„ÅÆMBP': 'abc'}]
        response = celery_app.control.broadcast("ping_revision", reply=True)
        revision = {}
        for item in response:
            revision.update(item)

        text = ""
        for worker in workers:
            fields = worker["fields"]
            hostname = worker["tags"]["hostname"]
            status = {True: "‚úÖ"}.get(fields["status"], "‚ùå")
            active = fields["active"]
            load = "{},{},{}".format(fields["load1"], fields["load5"], fields["load15"])
            rev = revision.get(hostname, "")
            text += f"{status}{hostname} **{active}** {load} {rev}\n"

        return text
